#ifndef GENERATED_ASN1SCC_oss_H
#define GENERATED_ASN1SCC_oss_H
/*
Code automatically generated by asn1scc tool
*/
#include "asn1crt.h"
#include "asn1crt_encoding.h"

#ifdef  __cplusplus
extern "C" {
#endif


typedef enum {
    solid = 0,
    liquid = 1,
    gas = 2
} FuelTypes;

// please use the following macros to avoid breaking code.
#define FuelTypes_solid solid
#define FuelTypes_liquid liquid
#define FuelTypes_gas gas

void FuelTypes_Initialize(FuelTypes* pVal);

#define ERR_FUELTYPES		1  /**/
flag FuelTypes_IsConstraintValid(const FuelTypes* pVal, int* pErrCode);
/*-- SpeedParameters --------------------------------------------*/

typedef enum {
    SpeedParameters_NONE,
    mph_PRESENT,
    kmph_PRESENT 
} SpeedParameters_selection;


typedef struct {
    SpeedParameters_selection kind;
    
    union {
        asn1SccSint mph;
        asn1SccSint kmph;
    } u; 
} SpeedParameters;

void SpeedParameters_Initialize(SpeedParameters* pVal);

#define ERR_SPEEDPARAMETERS		22  /**/
#define ERR_SPEEDPARAMETERS_MPH		8  /**/
#define ERR_SPEEDPARAMETERS_KMPH		15  /**/
flag SpeedParameters_IsConstraintValid(const SpeedParameters* pVal, int* pErrCode);
/*-- Rocket --------------------------------------------*/
typedef char Rocket_name[13];
typedef char Rocket_message[20];

typedef char Rocket_payload_elem[14];

typedef struct {
    int nCount; 
    
    Rocket_payload_elem arr[7];
} Rocket_payload;
typedef struct {
    asn1SccSint xrange;
    Rocket_name name;
    Rocket_message message;
    FuelTypes fuel;
    SpeedParameters speed;
    Rocket_payload payload;

    struct {
        unsigned int speed:1;
    } exist;

} Rocket;

void Rocket_name_Initialize(Rocket_name val);
void Rocket_message_Initialize(Rocket_message val);
void Rocket_payload_elem_Initialize(Rocket_payload_elem val);
void Rocket_payload_Initialize(Rocket_payload* pVal);
void Rocket_Initialize(Rocket* pVal);

#define ERR_ROCKET		102  /**/
#define ERR_ROCKET_XRANGE		29  /**/
#define ERR_ROCKET_NAME		36  /**/
#define ERR_ROCKET_MESSAGE		43  /**/
#define ERR_ROCKET_FUEL_2		57  /**/
#define ERR_ROCKET_SPEED_2		83  /**/
#define ERR_ROCKET_PAYLOAD		95  /**/
#define ERR_ROCKET_PAYLOAD_ELM		88  /**/
flag Rocket_IsConstraintValid(const Rocket* pVal, int* pErrCode);
/*-- Coordinate --------------------------------------------*/
typedef struct {
    asn1Real x;
    asn1Real y;

} Coordinate;

void Coordinate_Initialize(Coordinate* pVal);

#define ERR_COORDINATE		123  /**/
#define ERR_COORDINATE_X		109  /**/
#define ERR_COORDINATE_Y		116  /**/
flag Coordinate_IsConstraintValid(const Coordinate* pVal, int* pErrCode);
/*-- ArmoryInfo --------------------------------------------*/
typedef struct {
    flag isExist;
    Coordinate xcoordinate;

    struct {
        unsigned int xcoordinate:1;
    } exist;

} ArmoryInfo;

void ArmoryInfo_Initialize(ArmoryInfo* pVal);

#define ERR_ARMORYINFO		163  /**/
#define ERR_ARMORYINFO_ISEXIST		130  /**/
#define ERR_ARMORYINFO_XCOORDINATE_2		158  /**/
flag ArmoryInfo_IsConstraintValid(const ArmoryInfo* pVal, int* pErrCode);
/*-- Armory --------------------------------------------*/


typedef struct {
    int nCount; 
    
    Rocket arr[3];
} Armory_list;
typedef struct {
    ArmoryInfo info;
    asn1SccSint count;
    Armory_list list;

    struct {
        unsigned int list:1;
    } exist;

} Armory;

void Armory_list_Initialize(Armory_list* pVal);
void Armory_Initialize(Armory* pVal);

#define ERR_ARMORY		314  /**/
#define ERR_ARMORY_INFO_2		210  /**/
#define ERR_ARMORY_COUNT		215  /**/
#define ERR_ARMORY_LIST		307  /**/
#define ERR_ARMORY_LIST_ELM_2		302  /**/
flag Armory_IsConstraintValid(const Armory* pVal, int* pErrCode);

 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 


#ifdef  __cplusplus
}

#endif

#endif
